/* Generated By:JavaCC: Do not edit this line. DfmParserConstants.java */
/*
 * The MIT License
 *
 * Copyright 2014 Krzysztof Kaszkowiak.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package eu.kaszkowiak.jdfm.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface DfmParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int STRING_SQ = 4;
  /** RegularExpression Id. */
  int PARENS = 7;
  /** RegularExpression Id. */
  int BRACKETS = 10;
  /** RegularExpression Id. */
  int CROCODILE_BRACKETS = 13;
  /** RegularExpression Id. */
  int HEX_DATA = 16;
  /** RegularExpression Id. */
  int WHITESPACE = 17;
  /** RegularExpression Id. */
  int EQUAL = 18;
  /** RegularExpression Id. */
  int COLON = 19;
  /** RegularExpression Id. */
  int END = 20;
  /** RegularExpression Id. */
  int OBJECT = 21;
  /** RegularExpression Id. */
  int ENDLINE = 22;
  /** RegularExpression Id. */
  int IDENTIFIER = 23;
  /** RegularExpression Id. */
  int HASH_STRING = 24;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_STRING_SQ = 1;
  /** Lexical state. */
  int IN_PARENS = 2;
  /** Lexical state. */
  int IN_BRACKETS = 3;
  /** Lexical state. */
  int IN_CROCODILE_BRACKETS = 4;
  /** Lexical state. */
  int IN_HEX_DATA = 5;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"\\\'\"",
    "<token of kind 2>",
    "<token of kind 3>",
    "\"\\\'\"",
    "\"(\"",
    "<token of kind 6>",
    "\")\"",
    "\"[\"",
    "<token of kind 9>",
    "\"]\"",
    "\"<\"",
    "<token of kind 12>",
    "\">\"",
    "\"{\"",
    "<token of kind 15>",
    "\"}\"",
    "<WHITESPACE>",
    "\"=\"",
    "\":\"",
    "\"end\"",
    "\"object\"",
    "<ENDLINE>",
    "<IDENTIFIER>",
    "<HASH_STRING>",
  };

}
